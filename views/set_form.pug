extends layout

block content
    form#set-form(method='POST' action='/api/sets' novalidate data-setid=(undefined===dataset ? false : dataset._id))
        div#name-group.form-group
            label(for='name') Name:
            input#name.form-control(type='text', placeholder='Meditation, sleep, mood, etc' name='name' value=(undefined===dataset ? '' : dataset.name) required)
            #name-invalid.invalid-feedback
            #name-valid.valid-feedback
        div#yAxisLabel-group.form-group
            label(for='yAxisLabel') Unit:
            input#yAxisLabel.form-control(type='text', placeholder='Minutes, hours, pounds, etc' name='yAxisLabel' value=(undefined===dataset ? '' : dataset.yAxisLabel) required)
            #yAxisLabel-invalid.invalid-feedback
            #yAxisLabel-valid.valid-feedback
        //- div#chartType-group.form-group
        //-     label(for='chartType') Chart Type:
        //-     select#chartType.form-control(name='chartType' required)
        //-         if(undefined!==dataset && dataset.chartType == 'line')
        //-             option(selected)
        //-                 | line
        //-         else
        //-             option
        //-                 | line
        //-         if(undefined!==dataset && dataset.chartType == 'bar')
        //-             option(selected)
        //-                 | bar
        //-         else
        //-             option
        //-                 | bar
        //-     #chartType-invalid.invalid-feedback
        //-     #chartType-valid.valid-feedback
        input#owner(type='hidden' name='owner' value=(undefined===user ? '' : user._id))
        button#save.btn.btn-success(type='submit')
            | Save
            span.spinner-border.spinner-border-sm.ml-1(role="status" aria-hidden="true")
block pagescript
    script.

        // are we in create or edit mode?
        var id = $('#set-form')[0].dataset.setid;
        console.log('set_form is in ' + (id !== undefined ? 'edit' : 'create') + ' mode');

        // set all the valid feedback messages the same
        $('.valid-feedback').html('OK');

        $('#set-form').submit(function(event) {
            // check client-side validation
            //- var form = $('#set-form')[0];
            //- if (form.checkValidity() === false) {
            //-     event.preventDefault();
            //-     event.stopPropagation();
            //-     $('#set-form').addClass('was-validated');
            //-     $('.invalid-feedback').html('This field is required.');
            //-     return;
            //- }

            // server-size validation, reset validation state
            //- $('#set-form').removeClass('was-validated');
            //- $('#set-form').removeClass('needs-validation');
            $('.form-control').removeClass('is-valid');
            $('.form-control').removeClass('is-invalid');

            // disable btn
            $('#save').prop('disabled', true);

            // get the form data
            // there are many ways to get this data using jQuery (you can use the class or id also)
            var formData = {
                'name':         $('input[name=name]').val(),
                'yAxisLabel':   $('input[name=yAxisLabel]').val(),
                //- 'chartType':    $('select[name=chartType]').val(),
                'owner':        $('input[name=owner]').val() // hidden
            };
            console.log(formData);

            // send data to server
            $.ajax({
                type        : 'POST',
                url         : (id !== undefined) ? ('/api/sets/' + id) : '/api/sets',
                data        : formData,
                dataType    : 'json',
                encode      : true
            })
            .done(function(data) {
                console.log(data); 

                // enable btn
                $('#save').prop('disabled', false);

                if (!data.success) {
                    //- $('#set-form').addClass('was-validated');
                    if(data.errors)
                    {
                        data.errors.forEach(function(error) {
                            // add the error message
                            if(error.param) {
                                // validation error
                                $('#' + error.param).addClass('is-invalid');
                                $('#' + error.param + '-invalid').html(error.msg);
                            }
                            else {
                                $.toast({
                                    title: 'Error!',
                                    content: error.msg || 'Unable to save, please try again later',
                                    type: 'error',
                                    delay: 5000
                                });
                            }
                        });
                    }
                }
                else {
                    // success
                    $.toast({
                        title: 'Success!',
                        content: data.message,
                        type: 'success',
                        delay: 5000
                    });

                    // redirect to homepage with a timeout so you can see the message
                    setTimeout(() => window.location.href = '/', 500);

                    //- $('form').append('<div class="alert alert-success">' + data.message + '</div>');

                    // usually after form submission, you'll want to redirect
                    // window.location = '/thank-you'; // redirect a user to another page
                }
            })
            .fail(function(data) {
                // enable btn
                $('#save').prop('disabled', false);

                $.toast({
                    title: 'Error!',
                    content: 'Unable to save, please try again later',
                    type: 'error',
                    delay: 5000
                });

                // TO DO: show a user error
                console.log(data);
            });

            // stop the form from submitting the normal way and refreshing the page
            event.preventDefault();
        });
